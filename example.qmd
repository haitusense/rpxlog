## 1. Install

### 1.1. local

```{r}
remove.packages("rpxlog")
install.packages("../rpxlog/", repos = NULL, type = "source")
```

### 1.2. github

```{r}
remove.packages("rpxlog")
remotes::install_github("haitusense/rpxlog", force=T)
```

## 2. Logの構造確認（各レコードのカウント）


```{r}
rpxlog::rpxlog_stdf_to_txt("./sample/1.stdf", "out.txt")
```

```{r}
rpxlog::rpxlog_sumally("./sample/a_b_c.stdf")
rpxlog::rpxlog_sumally("./sample/a-b-c.stdf", delimiter = "-")
```

## 3. Header

```{r}
rpxlog::rpxlog_header("./sample/1.stdf")
```

## DTR (Datalog Text Record) 

```{r}
a <- rpxlog::rpxlog_dtr("./sample/1.stdf", glob2rx("PixelTest_Time:*"))
as.data.frame(a[,1])
```

## PTR (Parametric Test Record) 

```{r}
a <- rpxlog::rpxlog_ptr("./sample/1.stdf", "OS_VCC.VDD12L")
head(as.data.frame(a[,1]))
# head(rpxlog::rpxlog_ptr("./sample/1.txt", "OS_VCC.VDD12L"))
# head(rpxlog::rpxlog_ptr("./sample/1.hoge", "OS_VCC.VDD12L"))
```

```{r}
paths <- c("./sample/1.stdf", "./sample/1.txt")
df <- paths |> rpxlog::rpxlog_ptr("OS_VCC.VDD12L")
head(as.data.frame(df[,1]))
head(as.data.frame(df[,2]))
```

```{r}
paths <- c("./sample/1.stdf")
keys <- c("OS_VCC.VDD12L", "OS_VCC.VDD18L")
df <- paths |> rpxlog::rpxlog_ptr(keys)
head(as.data.frame(df[,1]))
head(as.data.frame(df[,2]))
```



```{r}
a <- t(data.frame(path = c("a", "b", "c")))
b <- c(1,2,3)
c <- c(4,5,6)
d <- data.frame(b, c)
a
d
merge(a,d)
```